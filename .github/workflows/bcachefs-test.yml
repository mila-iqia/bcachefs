name: bchfs-tests

on: [push, pull_request]

jobs:
  bchfs-compile:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-latest]
        python-version: ['3.7', '3.8']

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Miniconda
        # You may pin to the exact commit or the version.
        # uses: conda-incubator/setup-miniconda@35d1405e78aa3f784fe3ce9a2eb378d5eeb62169
        uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          # Environment name (or path) to activate on all shells. Default is `test` which will be created in `$CONDA/envs/test`. If an empty string is used, no environment is activated by default (For `base` activation see the `auto-activate-base` option). If the environment does not exist, it will be created and activated. If `environment-file` is used and you want that to be the environment used, you need to explicitely provide the name of that environment on `activate-environment`. If using sh/bash/cmd.exe shells please read the IMPORTANT! section on the README.md! to properly activate conda environments on these shells.
          activate-environment: "" # optional, default is test
          # Conda configuration. If you’d prefer that conda’s base environment not be activated on startup, set the to "false". Default is "true". This setting always overrides if set to "true" or "false". If you want to use the "condarc-file" setting pass and empty string. See https://docs.conda.io/projects/conda/en/latest/user-guide/configuration/ for more information.
          auto-activate-base: false # optional, default is true
          # Conda configuration. Comma separated list of channels to use in order of priority. See https://docs.conda.io/projects/conda/en/latest/user-guide/configuration/ for more information.
          channels: defaults, conda-forge # optional, default is
          # Experimental. Use mamba (https://github.com/QuantStack/mamba) as a faster drop-in replacement for conda installs. Disabled by default. To enable, use "*" or a "x.y" version string.
          # mamba-version: "*" # optional, default is 
          # Experimental. Use mamba as soon as available (either as provided by `mamba-in-installer` or installation by `mamba-version`)
          # use-mamba: true # optional, default is 

      - name: Install Requirements
        run: |
          (eval "$(conda shell.bash hook)" && \
            conda activate && \
            conda install --yes --freeze-installed git-annex=7.20190819)
          python3 -m pip install -r requirements.txt -r tests/requirements.txt

      - name: Install
        run: |
          python3 -m pip install --global-option -coverage -ve .

      - name: Tests
        run: |
          (eval "$(conda shell.bash hook)" && \
            conda activate && \
            git-annex get --fast testdata/*)
          coverage run --parallel-mode -m pytest -vv

      - name: Coverage
        run: |
          coverage combine
          coverage report -m
          coverage xml --include bcachefs/'*' -o .coverage.xml
          gcovr --filter bcachefs/ --print-summary --xml .coverage_c.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: ./.coverage_c.xml,./.coverage.xml
